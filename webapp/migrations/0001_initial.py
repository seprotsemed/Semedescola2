# Generated by Django 5.0.8 on 2024-08-22 18:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CriteriosEspeciais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('bairro', models.CharField(max_length=100)),
                ('vagas_totais', models.IntegerField()),
                ('vagas_disponiveis', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ModalidadeEnsino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='NecessidadeEspecial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Responsavel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=14)),
                ('nome', models.CharField(max_length=100)),
                ('numero_identidade', models.CharField(max_length=20)),
                ('celular1', models.CharField(max_length=15)),
                ('celular2', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResponsavelPeloAluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('ADMINISTRADOR', 'Administrador'), ('TECNICO_PEDAGOGICO', 'Técnico Pedagógico'), ('AGENTE_ADMINISTRATIVO', 'Agente Administrativo')], default='AGENTE_ADMINISTRATIVO', max_length=25)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('escola', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.escola')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255)),
                ('data_nascimento', models.DateField()),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo')], default='ativo', max_length=7)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], max_length=1)),
                ('tem_gemeo', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=1)),
                ('nome_mae', models.CharField(max_length=255)),
                ('responsavel_nome', models.CharField(max_length=100)),
                ('responsavel_cpf', models.CharField(max_length=14)),
                ('responsavel_numero_identidade', models.CharField(max_length=20)),
                ('responsavel_celular1', models.CharField(max_length=15)),
                ('responsavel_celular2', models.CharField(blank=True, max_length=15, null=True)),
                ('responsavel_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('bairro_escola', models.CharField(max_length=255)),
                ('cep', models.CharField(max_length=10)),
                ('endereco', models.CharField(max_length=255)),
                ('bairro', models.CharField(max_length=255)),
                ('numero_residencia', models.CharField(max_length=10)),
                ('complemento', models.CharField(blank=True, max_length=255, null=True)),
                ('data_cadastro', models.DateField(auto_now_add=True)),
                ('hora_cadastro', models.TimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('pontuacao', models.IntegerField(blank=True, null=True)),
                ('ordenacao', models.IntegerField(blank=True, null=True)),
                ('situacao', models.CharField(blank=True, max_length=100, null=True)),
                ('em_espera', models.BooleanField(default=False)),
                ('classificacao', models.CharField(blank=True, max_length=50, null=True)),
                ('observacao', models.TextField(blank=True, null=True)),
                ('criterios_especiais', models.JSONField(default=list)),
                ('responsavel_cadastro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cadastros_realizados', to=settings.AUTH_USER_MODEL)),
                ('primeira_escolha', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primeira_escolha', to='webapp.escola')),
                ('segunda_escolha', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='segunda_escolha', to='webapp.escola')),
                ('modalidade_ensino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.modalidadeensino')),
                ('necessidade_especial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.necessidadeespecial')),
            ],
        ),
        migrations.CreateModel(
            name='Anotacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_contato', models.DateField()),
                ('anotacao', models.TextField()),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.aluno')),
                ('tecnico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='escola',
            name='modalidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.modalidadeensino'),
        ),
        migrations.CreateModel(
            name='SerieAno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
                ('modalidade_ensino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series_anos', to='webapp.modalidadeensino')),
            ],
        ),
        migrations.AddField(
            model_name='escola',
            name='serie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.serieano'),
        ),
        migrations.AddField(
            model_name='aluno',
            name='serie_ano',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.serieano'),
        ),
    ]
